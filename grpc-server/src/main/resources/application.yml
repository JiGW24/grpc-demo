spring:
  application:
    name: local-grpc-server

  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://xxxxxx:3306/ai_system?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: xxxxx
    type: com.alibaba.druid.pool.DruidDataSource

#dataSources:
#  ds0: !!org.apache.commons.dbcp.BasicDataSource
#    driverClassName: com.mysql.jdbc.Driver
#    url: jdbc:mysql://47.97.107.27:3306/ai_system?useUnicode=true&characterEncoding=utf-8&useSSL=false
#    username: root
#    password: j1995821gw
##  ds1: !!org.apache.commons.dbcp.BasicDataSource
##    driverClassName: com.mysql.jdbc.Driver
##    url: jdbc:mysql://localhost:3306/ds1
##    username: root
##    password:
#
#shardingRule:
#  tables:
#    t_order:
#      actualDataNodes: ds${0..1}.t_order${0..1}
##      databaseStrategy:
##        inline:
##          shardingColumn: user_id
##          algorithmExpression: ds${user_id % 2}
#      tableStrategy:
#        inline:
#          shardingColumn: order_id
#          algorithmExpression: t_order${order_id % 2}
#      keyGenerator:
#        type: SNOWFLAKE
#        column: order_id
##    t_order_item:
##      actualDataNodes: ds${0..1}.t_order_item${0..1}
##      databaseStrategy:
##        inline:
##          shardingColumn: user_id
##          algorithmExpression: ds${user_id % 2}
##      tableStrategy:
##        inline:
##          shardingColumn: order_id
##          algorithmExpression: t_order_item${order_id % 2}
##  bindingTables:
##    - t_order,t_order_item
##  broadcastTables:
##    - t_config
#
#  defaultDataSourceName: ds0
#  defaultTableStrategy:
#    none:
#  defaultKeyGenerator:
#    type: SNOWFLAKE
#    column: order_id
#
#props:
#  sql.show: true






mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  type-aliases-package: com.jgw.pojo
  mapper-locations: classpath:mybatis/mapper/*.xml


grpc:
  server:
    port: 9898


